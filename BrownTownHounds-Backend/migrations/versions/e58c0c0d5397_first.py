"""first

Revision ID: e58c0c0d5397
Revises: 
Create Date: 2025-04-17 14:17:53.019089

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e58c0c0d5397'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('char_class', sa.String(length=64), nullable=False),
    sa.Column('image_path', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_cards_char_class'), ['char_class'], unique=False)
        batch_op.create_index(batch_op.f('ix_cards_image_path'), ['image_path'], unique=True)
        batch_op.create_index(batch_op.f('ix_cards_name'), ['name'], unique=False)

    op.create_table('class',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('class', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_class_name'), ['name'], unique=True)

    op.create_table('perk',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('perk', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_perk_name'), ['name'], unique=True)

    op.create_table('character',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('xp', sa.Integer(), nullable=False),
    sa.Column('gold', sa.Integer(), nullable=False),
    sa.Column('perk_points', sa.Integer(), nullable=False),
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_character_class_id'), ['class_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_character_gold'), ['gold'], unique=False)
        batch_op.create_index(batch_op.f('ix_character_level'), ['level'], unique=False)
        batch_op.create_index(batch_op.f('ix_character_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_character_perk_points'), ['perk_points'], unique=False)
        batch_op.create_index(batch_op.f('ix_character_xp'), ['xp'], unique=False)

    op.create_table('class_perk',
    sa.Column('class_id', sa.Integer(), nullable=False),
    sa.Column('perk_id', sa.Integer(), nullable=False),
    sa.Column('times_unlockable', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['class_id'], ['class.id'], ),
    sa.ForeignKeyConstraint(['perk_id'], ['perk.id'], ),
    sa.PrimaryKeyConstraint('class_id', 'perk_id')
    )
    with op.batch_alter_table('class_perk', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_class_perk_times_unlockable'), ['times_unlockable'], unique=False)

    op.create_table('character_perk',
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('perk_id', sa.Integer(), nullable=False),
    sa.Column('times_unlocked', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.ForeignKeyConstraint(['perk_id'], ['perk.id'], ),
    sa.PrimaryKeyConstraint('character_id', 'perk_id')
    )
    with op.batch_alter_table('character_perk', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_character_perk_times_unlocked'), ['times_unlocked'], unique=False)

    op.create_table('notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('character_id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['character_id'], ['character.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_notes_character_id'), ['character_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_notes_character_id'))

    op.drop_table('notes')
    with op.batch_alter_table('character_perk', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_character_perk_times_unlocked'))

    op.drop_table('character_perk')
    with op.batch_alter_table('class_perk', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_class_perk_times_unlockable'))

    op.drop_table('class_perk')
    with op.batch_alter_table('character', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_character_xp'))
        batch_op.drop_index(batch_op.f('ix_character_perk_points'))
        batch_op.drop_index(batch_op.f('ix_character_name'))
        batch_op.drop_index(batch_op.f('ix_character_level'))
        batch_op.drop_index(batch_op.f('ix_character_gold'))
        batch_op.drop_index(batch_op.f('ix_character_class_id'))

    op.drop_table('character')
    with op.batch_alter_table('perk', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_perk_name'))

    op.drop_table('perk')
    with op.batch_alter_table('class', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_class_name'))

    op.drop_table('class')
    with op.batch_alter_table('cards', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_cards_name'))
        batch_op.drop_index(batch_op.f('ix_cards_image_path'))
        batch_op.drop_index(batch_op.f('ix_cards_char_class'))

    op.drop_table('cards')
    # ### end Alembic commands ###
